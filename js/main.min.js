function animate() {
    var textPos = 0;
    var scrollSpeed = .05;
    window.addEventListener('wheel', function (e) {
        textPos += e.deltaY * scrollSpeed;
        textPos = textPos < 0 ? 0 : textPos;
        textPos = textPos > textHolder.size.y ? textHolder.size.y : textPos;
        textHolder.position.y = textPos;
    });
}
function Body({
	color = 'ff0000',
	size = 1
} = {}) {
	var self = this;
	self.geometry = new THREE.SphereGeometry(size, 100, 100);
	self.material = new THREE.MeshBasicMaterial({
		color: '#' + color,
		wireframe: false
	});
	self.mesh = new THREE.Mesh(self.geometry, self.material);

	scene.add(self.mesh);
};
function Camera() {
	var self = this;
	self.camera = new THREE.PerspectiveCamera(30, // Field of view
	window.innerWidth / window.innerHeight, // Aspect ratio
	0.1, // Near plane
	10000 // Far plane
	);
	self.camera.position.set(50, 50, 50);
	self.lookAtPos = new THREE.Vector3();
	self.camera.lookAt(self.lookAtPos);
}
function light() {
    var light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.3);
    light.position.set(0, 500, 0);
    scene.add(light);
    dirLight = new THREE.PointLight(0xffffff, .75);
    dirLight.color.setHSL(0.1, 1, 0.95);
    dirLight.position.set(0, 0, 0);
    dirLight.position.multiplyScalar(50);
    scene.add(dirLight);
}
function Surface(name) {

	var self = this;
	self.name = name;
	self.geometry = new THREE.PlaneGeometry(50, 50, 10, 10);
	self.material = new THREE.MeshPhongMaterial({
		color: 0x999999,
		wireframe: true
	});
	self.mesh = new THREE.Mesh(self.geometry, self.material);
	self.mesh.position.y = 0;
	self.mesh.rotation.x = Math.PI / -2;
	scene.add(self.mesh);
}
var textHolder = new THREE.Group(),
    textHeight = 0,
    text,
    textMesh,
    textMaterial = new THREE.MeshBasicMaterial({
    color: 0xffffff,
    wireframe: false
}),
    font,
    planets = [{ name: 'Mercury' }, { name: 'Venus' }, { name: 'Earth' }, { name: 'Mars' }, { name: 'Jupiter' }, { name: 'Saturn' }, { name: 'Uranus' }, { name: 'Neptune' }];

function loadFont() {

    var loader = new THREE.FontLoader();
    loader.load('/fonts/optima.json', function (response) {

        font = response;
        for (var i = 0; i < planets.length; i++) {
            var textGeometry = new THREE.TextGeometry(planets[i].name, {
                font: font,
                weight: 'regular',
                size: 2,
                height: 0
            });
            textMesh = new THREE.Mesh(textGeometry, textMaterial);
            textMesh.boundingBox = new THREE.Box3().setFromObject(textMesh);
            textMesh.size = textMesh.boundingBox.getSize();
            textMesh.position.y = -textHeight;
            textHeight += 3;
            textHolder.add(textMesh);
        }
        textHolder.boundingBox = new THREE.Box3().setFromObject(textHolder);
        textHolder.size = textHolder.boundingBox.getSize();
        scene.add(textHolder);
    });
}
//Init Canvas
var renderer = new THREE.WebGLRenderer({
	alpha: true,
	antialias: true
});
renderer.setSize(window.innerWidth, window.innerHeight);
renderer.setClearColor('#ccc');
document.body.appendChild(renderer.domElement);

//Scene
var scene = new THREE.Scene();

//Ground
var surface = new Surface();

//Sphere
var obj = new Body();

//Text
loadFont();

//Animate Text
animate();

//Camera
var camera = new Camera();

//Lights
light();

//Begin Render
renderer.render(scene, camera.camera);
render = function () {
	requestAnimationFrame(render);
	renderer.render(scene, camera.camera);
};

//Render
render();